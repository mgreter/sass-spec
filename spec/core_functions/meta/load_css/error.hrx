<===> type/url/input.scss
@use "sass:meta";
@include meta.load-css(1);

<===> type/url/error
Error: $url: 1 is not a string.
  ,
2 | @include meta.load-css(1);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> type/url/error-libsass
Error: $url: 1 is not a string.
  ,
2 | @include meta.load-css(1);
  |                        ^
  '
  input.scss 2:24  load-css()
  ,
2 | @include meta.load-css(1);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> type/with/map/input.scss
@use "sass:meta";
@include meta.load-css("other", $with: 1);

<===> type/with/map/error
Error: $with: 1 is not a map.
  ,
2 | @include meta.load-css("other", $with: 1);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> type/with/map/error-libsass
Error: $with: 1 is not a map.
  ,
2 | @include meta.load-css("other", $with: 1);
  |                                        ^
  '
  input.scss 2:40  load-css()
  ,
2 | @include meta.load-css("other", $with: 1);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> type/with/key/input.scss
@use "sass:meta";
@include meta.load-css("other", $with: (1: null));

<===> type/with/key/error
Error: $with key: 1 is not a string.
  ,
2 | @include meta.load-css("other", $with: (1: null));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> type/with/key/error-libsass
Error: $with key: 1 is not a string.
  ,
2 | @include meta.load-css("other", $with: (1: null));
  |                                         ^
  '
  input.scss 2:41  load-css()
  ,
2 | @include meta.load-css("other", $with: (1: null));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> too_few_args/input.scss
@use "sass:meta";
@include meta.load-css();

<===> too_few_args/error
Error: Missing argument $url.
  ,--> input.scss
2 | @include meta.load-css();
  | ^^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:meta
1 | @mixin load-css($url, $with: null) {
  |        =========================== declaration
  '
  input.scss 2:1  root stylesheet

<===>
================================================================================
<===> too_many_args/input.scss
@use "sass:meta";
@include meta.load-css("other", (), "a");

<===> too_many_args/error
Error: Only 2 arguments allowed, but 3 were passed.
  ,--> input.scss
2 | @include meta.load-css("other", (), "a");
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:meta
1 | @mixin load-css($url, $with: null) {
  |        =========================== declaration
  '
  input.scss 2:1  root stylesheet

<===>
================================================================================
<===> load/README.md
This mixin should load modules in the same way as the `@use` rule. To avoid tons
of duplicated tests, we just test a couple basic error cases.

<===>
================================================================================
<===> load/missing/input.scss
@use "sass:meta";
@include meta.load-css("other");

<===> load/missing/error
Error: Can't find stylesheet to import.
  ,
2 | @include meta.load-css("other");
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===>
================================================================================
<===> load/loop/input.scss
@use "sass:meta";
@include meta.load-css("other");

<===> load/loop/_other.scss
@use "sass:meta";
@include meta.load-css("input");

<===> load/loop/error
Error: Module loop: input.scss is already being loaded.
  ,
2 | @include meta.load-css("input");
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  _other.scss 2:1  load-css()
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> with/undefined/input.scss
@use "sass:meta";
@include meta.load-css("other", $with: (a: b));

<===> with/undefined/_other.scss
// This file defines no variables.

<===> with/undefined/error
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> with/undefined/error-libsass
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("other", $with: (a: b));
  |                                         ^
  '
  input.scss 2:41  load-css()
  ,
2 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> with/not_default/input.scss
@use "sass:meta";
@include meta.load-css("other", $with: (a: b));

<===> with/not_default/_other.scss
$a: c;

<===> with/not_default/error
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> with/not_default/error-libsass
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("other", $with: (a: b));
  |                                         ^
  '
  input.scss 2:41  load-css()
  ,
2 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> with/namespace/input.scss
@use "sass:meta";
@include meta.load-css("midstream", $with: (a: b));

<===> with/namespace/_midstream.scss
@use "upstream";
upstream.$a: c !default;

<===> with/namespace/_upstream.scss
$a: d;

<===> with/namespace/error
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("midstream", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> with/namespace/error-libsass
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("midstream", $with: (a: b));
  |                                             ^
  '
  input.scss 2:45  load-css()
  ,
2 | @include meta.load-css("midstream", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> with/nested/input.scss
@use "sass:meta";
@include meta.load-css("other", $with: (a: b));

<===> with/nested/_other.scss
c {$a: d !default}

<===> with/nested/error
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> with/nested/error-libsass
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("other", $with: (a: b));
  |                                         ^
  '
  input.scss 2:41  load-css()
  ,
2 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> with/conflict/input.scss
@use "sass:meta";
@include meta.load-css("midstream", $with: (a: b));

<===> with/conflict/_midstream.scss
@use "left" as *;
@use "right" as *;

$a: c !default;

<===> with/conflict/_left.scss
$a: left;

<===> with/conflict/_right.scss
$a: right;

<===> with/conflict/error
Error: This variable is available from multiple global modules.
    ,
1   | @use "left" as *;
    | ================ includes variable
2   | @use "right" as *;
    | ================= includes variable
... |
4   | $a: c !default;
    | ^^^^^^^^^^^^^^ variable use
    '
  _midstream.scss 4:1  load-css()
  input.scss 2:1       root stylesheet

<===>
================================================================================
<===> with/repeated_variable/input.scss
@use "sass:meta";
@include meta.load-css("other", $with: (a-b: c, a_b: c));

<===> with/repeated_variable/_other.scss
$a-b: c !default;

<===> with/repeated_variable/error
Error: The variable $a-b was configured twice.
  ,
2 | @include meta.load-css("other", $with: (a-b: c, a_b: c));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===>
================================================================================
<===> with/core_module/input.scss
@use "sass:meta";
@include meta.load-css("sass:color", $with: (a: b));

<===> with/core_module/error
Error: Built-in module sass:color can't be configured.
  ,
2 | @include meta.load-css("sass:color", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===>
================================================================================
<===> with/multi_configuration/README.md
The same file can't be configured multiple times, even if the configuration is
identical.

<===>
================================================================================
<===> with/multi_configuration/double_load/both_configured/input.scss
@use "sass:meta";
@include meta.load-css("other", $with: (a: b));
@include meta.load-css("other", $with: (a: b));

<===> with/multi_configuration/double_load/both_configured/_other.scss
$a: c !default;

<===> with/multi_configuration/double_load/both_configured/error
Error: _other.scss was already loaded, so it can't be configured using "with".
  ,
2 | @include meta.load-css("other", $with: (a: b));
  | ============================================== original load
3 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ new load
  '
  input.scss 3:1  root stylesheet

<===>
================================================================================
<===> with/multi_configuration/double_load/unconfigured_first/input.scss
@use "sass:meta";
@include meta.load-css("other");
@include meta.load-css("other", $with: (a: b));

<===> with/multi_configuration/double_load/unconfigured_first/_other.scss
$a: c !default;

<===> with/multi_configuration/double_load/unconfigured_first/error
Error: _other.scss was already loaded, so it can't be configured using "with".
  ,
2 | @include meta.load-css("other");
  | =============================== original load
3 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ new load
  '
  input.scss 3:1  root stylesheet

<===>
================================================================================
<===> with/multi_configuration/double_load/through_forward/input.scss
@use "sass:meta";
@include meta.load-css("forwarded");
@include meta.load-css("midstream", $with: (a: b));

<===> with/multi_configuration/double_load/through_forward/_midstream.scss
@forward "forwarded";

$a: c !default;

<===> with/multi_configuration/double_load/through_forward/_forwarded.scss
// This file defines no variables, but it still may not be loaded both with and
// without configuration.

<===> with/multi_configuration/double_load/through_forward/error
Error: This module was already loaded, so it can't be configured using "with".
  ,--> _midstream.scss
1 | @forward "forwarded";
  | ^^^^^^^^^^^^^^^^^^^^ new load
  '
  ,--> input.scss
2 | @include meta.load-css("forwarded");
  | =================================== original load
3 | @include meta.load-css("midstream", $with: (a: b));
  | ================================================== configuration
  '
  _midstream.scss 1:1  load-css()
  input.scss 3:1       root stylesheet

<===>
================================================================================
<===> with/multi_configuration/use_and_load/both_configured/input.scss
@use "sass:meta";
@use "other" with ($a: b);
@include meta.load-css("other", $with: (a: b));

<===> with/multi_configuration/use_and_load/both_configured/_other.scss
$a: c !default;

<===> with/multi_configuration/use_and_load/both_configured/error
Error: _other.scss was already loaded, so it can't be configured using "with".
  ,
2 | @use "other" with ($a: b);
  | ========================= original load
3 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ new load
  '
  input.scss 3:1  root stylesheet

<===>
================================================================================
<===> with/multi_configuration/use_and_load/load_first/input.scss
// This indirection is necessary so that we can execute `meta.load-css()` before
// we begin loading `used`.
@use "loads";
@use "other" with ($a: b);

<===> with/multi_configuration/use_and_load/load_first/_loads.scss
@use "sass:meta";
@include meta.load-css("other", $with: (a: b));

<===> with/multi_configuration/use_and_load/load_first/_other.scss
$a: c !default;

<===> with/multi_configuration/use_and_load/load_first/error
Error: This module was already loaded, so it can't be configured using "with".
  ,--> input.scss
4 | @use "other" with ($a: b);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^ new load
  '
  ,--> _loads.scss
2 | @include meta.load-css("other", $with: (a: b));
  | ============================================== original load
  '
  input.scss 4:1  root stylesheet

<===>
================================================================================
<===> with/multi_configuration/use_and_load/unconfigured_first/input.scss
@use "sass:meta";
@use "other";
@include meta.load-css("other", $with: (a: b));

<===> with/multi_configuration/use_and_load/unconfigured_first/_other.scss
$a: c !default;

<===> with/multi_configuration/use_and_load/unconfigured_first/error
Error: _other.scss was already loaded, so it can't be configured using "with".
  ,
2 | @use "other";
  | ============ original load
3 | @include meta.load-css("other", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ new load
  '
  input.scss 3:1  root stylesheet

<===>
================================================================================
<===> with/multi_configuration/use_and_load/through_forward/input.scss
@use "sass:meta";
@use "forwarded";
@include meta.load-css("midstream", $with: (a: b));

<===> with/multi_configuration/use_and_load/through_forward/_midstream.scss
@forward "forwarded";

$a: c !default;

<===> with/multi_configuration/use_and_load/through_forward/_forwarded.scss
// This file defines no variables, but it still may not be loaded both with and
// without configuration.

<===> with/multi_configuration/use_and_load/through_forward/error
Error: This module was already loaded, so it can't be configured using "with".
  ,--> _midstream.scss
1 | @forward "forwarded";
  | ^^^^^^^^^^^^^^^^^^^^ new load
  '
  ,--> input.scss
2 | @use "forwarded";
  | ================ original load
3 | @include meta.load-css("midstream", $with: (a: b));
  | ================================================== configuration
  '
  _midstream.scss 1:1  load-css()
  input.scss 3:1       root stylesheet

<===>
================================================================================
<===> with/through_forward/show/input.scss
@use "sass:meta";
@include meta.load-css("used", $with: (a: b));

<===> with/through_forward/show/_used.scss
@forward "forwarded" show $b;

<===> with/through_forward/show/_forwarded.scss
$a: d !default;

<===> with/through_forward/show/error
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("used", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> with/through_forward/show/error-libsass
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("used", $with: (a: b));
  |                                        ^
  '
  input.scss 2:40  load-css()
  ,
2 | @include meta.load-css("used", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> with/through_forward/hide/input.scss
@use "sass:meta";
@include meta.load-css("used", $with: (a: b));

<===> with/through_forward/hide/_used.scss
@forward "forwarded" hide $a;

<===> with/through_forward/hide/_forwarded.scss
$a: d !default;

<===> with/through_forward/hide/error
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("used", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> with/through_forward/hide/error-libsass
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("used", $with: (a: b));
  |                                        ^
  '
  input.scss 2:40  load-css()
  ,
2 | @include meta.load-css("used", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> with/through_forward/as/input.scss
@use "sass:meta";
@include meta.load-css("used", $with: (a: b));

<===> with/through_forward/as/_used.scss
@forward "forwarded" as c-*;

<===> with/through_forward/as/_forwarded.scss
$a: d !default;

<===> with/through_forward/as/error
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("used", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> with/through_forward/as/error-libsass
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("used", $with: (a: b));
  |                                        ^
  '
  input.scss 2:40  load-css()
  ,
2 | @include meta.load-css("used", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> with/through_forward/with/input.scss
@use "sass:meta";
@include meta.load-css("used", $with: (a: b));

<===> with/through_forward/with/_used.scss
@forward "forwarded" with ($a: c);

<===> with/through_forward/with/_forwarded.scss
$a: d !default;

<===> with/through_forward/with/error
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("used", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1  root stylesheet

<===> with/through_forward/with/error-libsass
Error: $a was not declared with !default in the @used module.
  ,
2 | @include meta.load-css("used", $with: (a: b));
  |                                        ^
  '
  input.scss 2:40  load-css()
  ,
2 | @include meta.load-css("used", $with: (a: b));
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> from_other/syntax/input.scss
@use "sass:meta";
@include meta.load-css("other");

<===> from_other/syntax/_other.scss
a {b: }

<===> from_other/syntax/error
Error: Expected expression.
  ,
1 | a {b: }
  |       ^
  '
  _other.scss 1:7  load-css()
  input.scss 2:1   root stylesheet

<===> from_other/syntax/error-libsass
Error: Expected expression.
  ,
1 | a {b: }
  |      ^
  '
  _other.scss 1:6  load-css()
  ,
2 | @include meta.load-css("other");
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1   root stylesheet

<===>
================================================================================
<===> from_other/runtime/input.scss
@use "sass:meta";
@include meta.load-css("other");

<===> from_other/runtime/_other.scss
a {b: 1px + 1em}

<===> from_other/runtime/error
Error: 1px and 1em have incompatible units.
  ,
1 | a {b: 1px + 1em}
  |       ^^^^^^^^^
  '
  _other.scss 1:7  load-css()
  input.scss 2:1   root stylesheet

<===> from_other/runtime/error-libsass
Error: Incompatible units em and px.
  ,
1 | a {b: 1px + 1em}
  |             ^^^
  '
  _other.scss 1:13  load-css()
  ,
1 | a {b: 1px + 1em}
  |       ^^^
  '
  _other.scss 1:7   load-css()
  ,
1 | a {b: 1px + 1em}
  |       ^^^^^^^^^
  '
  _other.scss 1:7   load-css()
  ,
2 | @include meta.load-css("other");
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 2:1    root stylesheet

<===>
================================================================================
<===> from_other/extend/input.scss
@use "sass:meta";
@include meta.load-css("other");

<===> from_other/extend/_other.scss
a {@extend missing}

<===> from_other/extend/error
Error: The target selector was not found.
Use "@extend missing !optional" to avoid this error.
  ,
1 | a {@extend missing}
  |    ^^^^^^^^^^^^^^^
  '
  _other.scss 1:4  load-css()
  input.scss 2:1   root stylesheet

<===> from_other/extend/error-libsass
Error: The target selector was not found.
Use "@extend missing !optional" to avoid this error.
  ,
1 | a {@extend missing}
  |            ^^^^^^^
  '
  _other.scss 1:12  root stylesheet

<===>
================================================================================
<===> member/README.md
Members from modules loaded by `load-css` are not avaialable in the loading
module.

<===>
================================================================================
<===> member/global/input.scss
@use "sass:meta";
@meta.load-css("other");

a {b: $c}

<===> member/global/_other.scss
$c: d;

<===> member/global/error
Error: Undefined variable.
  ,
4 | a {b: $c}
  |       ^^
  '
  input.scss 4:7  root stylesheet

<===>
================================================================================
<===> member/namespace/input.scss
@use "sass:meta";
@meta.load-css("other");

a {b: other.$c}

<===> member/namespace/_other.scss
$c: d;

<===> member/namespace/error
Error: There is no module with the namespace "other".
  ,
4 | a {b: other.$c}
  |       ^^^^^^^^
  '
  input.scss 4:7  root stylesheet
